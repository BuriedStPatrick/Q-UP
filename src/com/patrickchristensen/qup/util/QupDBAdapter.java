package com.patrickchristensen.qup.util;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.widget.Toast;

public class QupDBAdapter {
	
	private SQLiteHelper dbHelper; //Lets us communicate with the database
	private Context context;
	
	/**
	 * The constructor of this adapter
	 * @param context The application context (Which activity is active?)
	 */
	public QupDBAdapter(Context context) {
		dbHelper = new SQLiteHelper(context);
		this.context = context;
	}
	
	/**
	 * Put data into a ContentValues object, insert into database
	 * @param songId The ID of the song
	 * @param votes The number of votes
	 */
	public long insertSong(long songId, int votes){
		ContentValues cv = new ContentValues();
		cv.put(SQLiteHelper.UID, songId);
		cv.put(SQLiteHelper.VOTES, votes);
		return dbHelper.getWritableDatabase().insert(SQLiteHelper.TABLE_SONGVOTES, null, cv);
	}
	
	/**
	 * Put data into a ContentValues object, update database
	 * @param songId The ID of the song
	 * @param votes The number of votes
	 */
	public long updateSong(long songId, int votes){
		ContentValues cv = new ContentValues();
		cv.put(SQLiteHelper.UID, songId);
		cv.put(SQLiteHelper.VOTES, votes);
		return dbHelper.getWritableDatabase().update(SQLiteHelper.TABLE_SONGVOTES, cv, SQLiteHelper.UID+"="+songId, null);
	}
	
	/**
	 * Get the number of votes for a song
	 * @param songId The ID of the song
	 * @return The number of votes
	 */
	public int getSongVotes(long songId){
		String query = "SELECT " + SQLiteHelper.VOTES + " FROM " + SQLiteHelper.TABLE_SONGVOTES + " WHERE " + SQLiteHelper.UID + " = " + songId;
		//Cursor pointing to current row of the table generated by the result of the query
		Cursor result = dbHelper.getWritableDatabase().rawQuery(query, null);
		//Move cursor to the first row, check if it even exists
		if(result.moveToFirst()){
			//Return the number of votes
			return result.getInt(result.getColumnIndex(SQLiteHelper.VOTES));
		}
		//If no songs, return 0 as default
		return 0;
	}
	
	public long getMostPopular(){
		String query = "SELECT " + SQLiteHelper.UID +", MAX("+SQLiteHelper.VOTES+") FROM " + SQLiteHelper.TABLE_SONGVOTES;
		Cursor result = dbHelper.getWritableDatabase().rawQuery(query, null);
		if(result.moveToFirst()){
			int index = result.getColumnIndex(SQLiteHelper.UID);
			return result.getLong(index);
		}
		return 0;
	}
	
	public String printDB(){
		String res = "";
		String query = "SELECT * FROM " + SQLiteHelper.TABLE_SONGVOTES;
		Cursor result = dbHelper.getWritableDatabase().rawQuery(query, null);
		while(result.moveToNext()){
			res += "ID: " + result.getInt(result.getColumnIndex(SQLiteHelper.UID)) + ", VOTES: " + result.getInt(result.getColumnIndex(SQLiteHelper.VOTES)) + "\n";
		}
		
		return res;
	}
	
	/**
	 * Private class to execute Database queries
	 * Extends built in Android functionality
	 */
	private static class SQLiteHelper extends SQLiteOpenHelper {
		
		private static final String 		DATABASE_NAME = "qup.db"; //Name of the database
		private static final int 			DATABASE_VERSION = 1; //Increasing this number will drop the old database
		
		//These are variables associated with database queries
		private static final String 		TABLE_SONGVOTES = "SONGVOTES";
		private static final String 		UID = "_id";
		private static final String			VOTES = "Votes";
		private static final String			CREATE_TABLE_SONGVOTES = "CREATE TABLE "+TABLE_SONGVOTES+"("+UID+" INTEGER PRIMARY KEY, "+VOTES+" INTEGER);";
		private static final String			DROP_TABLE_SONGVOTES = "DROP TABLE IF EXISTS "+TABLE_SONGVOTES;
	
		public SQLiteHelper(Context context) {
			super(context, DATABASE_NAME, null, DATABASE_VERSION);
		}
		
		/**
		 * First method being called
		 * Creates the table if it doesn't already exist
		 */
		@Override
		public void onCreate(SQLiteDatabase db) {
			db.execSQL(CREATE_TABLE_SONGVOTES);
		}
	
		/**
		 * Only called when DATABASE_VERSION number is changed
		 * Drops the old table and create a new empty one
		 */
		@Override
		public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
			db.execSQL(DROP_TABLE_SONGVOTES);
			onCreate(db);
		}
		
	}
	
}
